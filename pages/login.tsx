import Head from 'next/head'
import Button from '../components/resuables/Button'
import { useState } from 'react'
import Input from '../components/resuables/Input'
import Router,{ useRouter } from 'next/router'
import cookie from 'js-cookie'
// custom components
const Login=async (username:string,password:string)=>{

    try{

        let login = await fetch("/api/login",{
            method:"POST",
            headers:{
                "Content-Type":"application/json"
            },
            body:JSON.stringify({username,password}) 
        })

         const token=(await login.json())

         if(token.token){
          cookie.set("user",token.token)
         cookie.set("dp",token.profile)
         cookie.set("role",token.role)
         cookie.set("auth",true)
         }
         
        
        login?true:false
    }
    catch(error){
        throw error

    }

}

interface HomeProp{
  loggedIn:boolean
}

 const Home=({loggedIn}:HomeProp)=> {
  const router = useRouter()
console.log('status',loggedIn)

  if(loggedIn){
    router.push('/')      
  }

    

    const [userName,setUsername] = useState<string>('')
    const [userPassword,setUserPassword] = useState<string>('')

    const handleClick=()=>{
        let state =Login(userName,userPassword)

        if(state){
            router.push('/')
        }
    }
    

  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="main">
          <Input type="email" label="Email" placeholder="Enter username or email" state={userName} required={true} onChange={(e)=>{setUsername(e.target.value)}}/>
          <Input type="password" label="Password" placeholder="Enter password" state={userPassword} required={true} onChange={(e)=>{setUserPassword(e.target.value)}}/>
        <Button title="Login" action={handleClick}/>
      </div>
    </>
  )
}

export async function getStaticProps() {
  // Call an external API endpoint to get posts.
 
  // const loggedIn = (await res.json()).isLoggedIn
  console.log('logged',cookie.get('auth'))
  let isLoggedIn = false
  if(cookie.get("auth")&&cookie.get("user")&&cookie.get("role")){
      isLoggedIn=true
      Router.push('/');
  }
 
  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      loggedIn:isLoggedIn
    },
  }
}

export default Home